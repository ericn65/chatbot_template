[build-system]
requires = ["setuptools", "wheel", "setuptools_scm[toml]"]
build-backend = "setuptools.build_meta"

[tool.setuptools-git-versioning]
enabled = true

[tool.setuptools.packages.find]
include = ["mh_chatbot_dialogue"]

[project]
name = "chatbot_template"
description = "Project to integrate and develop chatbots."
dynamic = ["version"]
readme = "README.md"
authors = [
    { name = "Èric Quintana Aguasca", email = "saericquintana@gmail.com" },
]
maintainers = [
    { name = "Èric Quintana Aguasca", email = "saericquintana@gmail.com" },
]
requires-python = ">=3.12"
dependencies = [
    "rich",
    "numpy",
    "python-dotenv",
    "gitpython",
    "fastapi>=0.117.1",
    "az>=0.1.0.dev1",
    "azure-storage-blob>=12.26.0",
    "azure-cosmos>=4.9.0",
    "dotenv>=0.9.9",
    "pyyaml>=6.0.3",
    "types-pyyaml>=6.0.12.20250915",
    "aiofiles>=24.1.0",
    "types-aiofiles>=24.1.0.20250822",
    "httpx>=0.28.1",
    "uvicorn>=0.37.0",
]

[dependency-groups]
dev = [
    "ruff<1.0.0,>=0.5.3",
    "mypy<2.0.0,>=1.4.1",
    "pytest<9.0.0,>=8.3.4",
    "pytest-cov",
    "pre-commit",
    "ipython",
    "notebook",
]

[tool.pytest.ini_options]
minversion = "6.2"
addopts = "-vvv -s --cov=mh_chatbot_dialogue --cov-report term-missing --cov-report xml:coverage.xml"
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.mypy]
files = ["**/*.py"]
ignore_missing_imports = true

[tool.ruff]
exclude = [
    ".git",
    ".venv",
    "build",
    "dist",
    "node_modules",
    "__init__.py"
]
line-length = 88
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = [
    "A",    # flake8-builtins
    "B",    # flake8-bugbear
    "D",    # pydocstyle
    "E",    # pycodestyle-error
    "F",    # Pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "PD",   # pandas-vet
    "TID",  # flake8-tidy-imports
    "UP",   # pyupgrade
]
ignore = [
    "D100",     # Checks for undocumented public module definitions
    "D104",     # Checks for undocumented public package definitions
    "D107",     # Checks for public __init__ method definitions that are missing docstrings
    "D205",     # Checks for docstring summary lines that are not separated from the docstring description by one blank line.
    "D212",     # Checks for docstring summary lines that are not positioned on the first physical line of the docstring
    "D401",     # Checks for docstring first lines that are not in an imperative mood
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
known-local-folder = [
  "scripts",
  "mh_chatbot_dialogue",
  "tests",
]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["classmethod", "pydantic.field_validator"]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D101"]
